// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class BatchPayment extends ethereum.Event {
  get params(): BatchPayment__Params {
    return new BatchPayment__Params(this);
  }
}

export class BatchPayment__Params {
  _event: BatchPayment;

  constructor(event: BatchPayment) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get provider(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get numCalls(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ProviderWithdraw extends ethereum.Event {
  get params(): ProviderWithdraw__Params {
    return new ProviderWithdraw__Params(this);
  }
}

export class ProviderWithdraw__Params {
  _event: ProviderWithdraw;

  constructor(event: ProviderWithdraw) {
    this._event = event;
  }

  get provider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UserDeposit extends ethereum.Event {
  get params(): UserDeposit__Params {
    return new UserDeposit__Params(this);
  }
}

export class UserDeposit__Params {
  _event: UserDeposit;

  constructor(event: UserDeposit) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UserWithdraw extends ethereum.Event {
  get params(): UserWithdraw__Params {
    return new UserWithdraw__Params(this);
  }
}

export class UserWithdraw__Params {
  _event: UserWithdraw;

  constructor(event: UserWithdraw) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ZkVerifierUpdated extends ethereum.Event {
  get params(): ZkVerifierUpdated__Params {
    return new ZkVerifierUpdated__Params(this);
  }
}

export class ZkVerifierUpdated__Params {
  _event: ZkVerifierUpdated;

  constructor(event: ZkVerifierUpdated) {
    this._event = event;
  }

  get oldVerifier(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newVerifier(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Escrow extends ethereum.SmartContract {
  static bind(address: Address): Escrow {
    return new Escrow("Escrow", address);
  }

  getProviderBalance(provider: Address): BigInt {
    let result = super.call(
      "getProviderBalance",
      "getProviderBalance(address):(uint256)",
      [ethereum.Value.fromAddress(provider)],
    );

    return result[0].toBigInt();
  }

  try_getProviderBalance(provider: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getProviderBalance",
      "getProviderBalance(address):(uint256)",
      [ethereum.Value.fromAddress(provider)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUserBalance(user: Address): BigInt {
    let result = super.call(
      "getUserBalance",
      "getUserBalance(address):(uint256)",
      [ethereum.Value.fromAddress(user)],
    );

    return result[0].toBigInt();
  }

  try_getUserBalance(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUserBalance",
      "getUserBalance(address):(uint256)",
      [ethereum.Value.fromAddress(user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUserBalanceUSD(user: Address): BigInt {
    let result = super.call(
      "getUserBalanceUSD",
      "getUserBalanceUSD(address):(uint256)",
      [ethereum.Value.fromAddress(user)],
    );

    return result[0].toBigInt();
  }

  try_getUserBalanceUSD(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUserBalanceUSD",
      "getUserBalanceUSD(address):(uint256)",
      [ethereum.Value.fromAddress(user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  providerBalances(param0: Address): BigInt {
    let result = super.call(
      "providerBalances",
      "providerBalances(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_providerBalances(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "providerBalances",
      "providerBalances(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pyusdToken(): Address {
    let result = super.call("pyusdToken", "pyusdToken():(address)", []);

    return result[0].toAddress();
  }

  try_pyusdToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("pyusdToken", "pyusdToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  userBalances(param0: Address): BigInt {
    let result = super.call("userBalances", "userBalances(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBigInt();
  }

  try_userBalances(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userBalances",
      "userBalances(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  zkVerifier(): Address {
    let result = super.call("zkVerifier", "zkVerifier():(address)", []);

    return result[0].toAddress();
  }

  try_zkVerifier(): ethereum.CallResult<Address> {
    let result = super.tryCall("zkVerifier", "zkVerifier():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _pyusdAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _zkVerifier(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get amountUSD(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositForUserCall extends ethereum.Call {
  get inputs(): DepositForUserCall__Inputs {
    return new DepositForUserCall__Inputs(this);
  }

  get outputs(): DepositForUserCall__Outputs {
    return new DepositForUserCall__Outputs(this);
  }
}

export class DepositForUserCall__Inputs {
  _call: DepositForUserCall;

  constructor(call: DepositForUserCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amountCents(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositForUserCall__Outputs {
  _call: DepositForUserCall;

  constructor(call: DepositForUserCall) {
    this._call = call;
  }
}

export class EmergencyWithdrawCall extends ethereum.Call {
  get inputs(): EmergencyWithdrawCall__Inputs {
    return new EmergencyWithdrawCall__Inputs(this);
  }

  get outputs(): EmergencyWithdrawCall__Outputs {
    return new EmergencyWithdrawCall__Outputs(this);
  }
}

export class EmergencyWithdrawCall__Inputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class EmergencyWithdrawCall__Outputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class ProcessBatchPaymentCall extends ethereum.Call {
  get inputs(): ProcessBatchPaymentCall__Inputs {
    return new ProcessBatchPaymentCall__Inputs(this);
  }

  get outputs(): ProcessBatchPaymentCall__Outputs {
    return new ProcessBatchPaymentCall__Outputs(this);
  }
}

export class ProcessBatchPaymentCall__Inputs {
  _call: ProcessBatchPaymentCall;

  constructor(call: ProcessBatchPaymentCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get provider(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amountCents(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get numCalls(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get proof(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get publicInputs(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }
}

export class ProcessBatchPaymentCall__Outputs {
  _call: ProcessBatchPaymentCall;

  constructor(call: ProcessBatchPaymentCall) {
    this._call = call;
  }
}

export class ProviderWithdrawCall extends ethereum.Call {
  get inputs(): ProviderWithdrawCall__Inputs {
    return new ProviderWithdrawCall__Inputs(this);
  }

  get outputs(): ProviderWithdrawCall__Outputs {
    return new ProviderWithdrawCall__Outputs(this);
  }
}

export class ProviderWithdrawCall__Inputs {
  _call: ProviderWithdrawCall;

  constructor(call: ProviderWithdrawCall) {
    this._call = call;
  }

  get amountCents(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ProviderWithdrawCall__Outputs {
  _call: ProviderWithdrawCall;

  constructor(call: ProviderWithdrawCall) {
    this._call = call;
  }
}

export class ProviderWithdrawAllCall extends ethereum.Call {
  get inputs(): ProviderWithdrawAllCall__Inputs {
    return new ProviderWithdrawAllCall__Inputs(this);
  }

  get outputs(): ProviderWithdrawAllCall__Outputs {
    return new ProviderWithdrawAllCall__Outputs(this);
  }
}

export class ProviderWithdrawAllCall__Inputs {
  _call: ProviderWithdrawAllCall;

  constructor(call: ProviderWithdrawAllCall) {
    this._call = call;
  }
}

export class ProviderWithdrawAllCall__Outputs {
  _call: ProviderWithdrawAllCall;

  constructor(call: ProviderWithdrawAllCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetZkVerifierCall extends ethereum.Call {
  get inputs(): SetZkVerifierCall__Inputs {
    return new SetZkVerifierCall__Inputs(this);
  }

  get outputs(): SetZkVerifierCall__Outputs {
    return new SetZkVerifierCall__Outputs(this);
  }
}

export class SetZkVerifierCall__Inputs {
  _call: SetZkVerifierCall;

  constructor(call: SetZkVerifierCall) {
    this._call = call;
  }

  get _zkVerifier(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetZkVerifierCall__Outputs {
  _call: SetZkVerifierCall;

  constructor(call: SetZkVerifierCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get amountCents(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
